L2 과제 자료 정리

1. 섹션별 기능 정리 문서화

2. 다른 2종류의 ini 파일에 대해서도 적용한다면?

3. 과제 이외 활동에 대해 정리 필요

4. 원하는 업무가 있다면 어필할 것

프로그램 목적

현재 T2 환경설정에 필요한 파라미터들은 텍스트 형식으로 일일이 수정해야 하는 번거로움이 있습니다.

또한 수정자가 각 값의 의미와 범주를 숙지해야 할 필요가 있고, 그렇지 않은 경우 즉각적인 현장 대응이 어렵습니다.

기존 방식 대로라면 "" 섹션의 파라미터값 "" 를 "" 로 직접 변경해줘야 합니다. 이때 파라미터를 잘못 선택하거나, 매개변수의 범위를 벗어난 값으로 설정한다면 세팅 오류로 인한 장비 안전 문제가 발생할 수 있습니다. 

하지만 편집 기능에 특화된 툴을 사용한다면 파라미터를 정확하게 선택하는 것은 물론 관전압, 관전류 등의 변수를 지정된 범위 안에서 선택하게 되므로 안전 사고를 방지할 수 있습니다.

EniTools 는 배경 지식이 없는 상태에서도 편집이 가능하도록 파라미터들의 툴팁을 제공하며, 손쉬운 조작을 위해 간편한 유저 인터페이스를 도입했습니다.

추후 다른 섹션 구분이 필요해지는 상황에 대응할 수 있게끔 Dialog 별 클래스를 구분했습니다.

Case : 서울대학교 건강검진센터 VOC 반영 업데이트 시, 영상 화질 개선 목적으로 One2 SW 상에서 CT Large Scale 촬영을 Default 로 고정해줄 수 있겠냐는 요청이 있었습니다.

CT 촬영에서 Large, Medium, Small, Chile Type 는 환자 정보의 나이 변수를 불러와 저장되며, 따라서 파라미터 값을 변경해서 촬영 타입을 고정할 수는 없습니다.

하지만 도움말 텍스트를 통해 각 타입 별 관전압, 관전류 차이가 있다는 것을 알리고, 검진센터 특성 상 영유아 환자가 없다는 점을 고려하여 성인 여성(Medium) 의 조사량을 소폭 상승시키는 정도로 적용해 볼 수 있습니다.

Section List

섹션별 기능 정리 및 파라미터 해석은 정확한 장비 사용을 위해 필요합니다.

영상 품질을 충분히 확보할 수 있는 기능이 존재하지만 파라미터의 뜻을 잘못 인식해 적용하지 못하거나,

값을 잘못 입력해 영상 품질 열화가 발생할 수 있습니다.

섹션 리스트는 특정 기능을 사용하기 위해 어떤 섹션을 선택해야 하는지, 섹션 내부의 파라미터들은 각각 어떤 의미와 값들을 갖는지 알려줍니다. 


편리한 UI

클릭만으로 핵심 기능을 사용하는데 초점을 맞추었습니다.

제어판 형식의 아이콘 배치로 섹션을 구분하고, 아이콘을 더블클릭 했을 때 섹션 다이얼로그가 출력되며 각 Control 을 간단하게 조작해 편집기능을 수행합니다.

프로그램 실행 후 Load Ini 버튼을 클릭해 기존 정보를 불러오고, Save 버튼을 클릭해 섹션 별 수정된 정보를 저장합니다.


보완점

파라미터의 의미를 설명할 때, SW 의 현재 사용중인 이미지를 불러와 이해를 돕는 방식으로 적용할 수 있습니다.

Sinus, Occlusion, Fullarch 같은 촬영 범위 예시를 보면, 어떤 종류의 촬영에 대해 파라미터를 변경하고 있는지 즉시 확인 가능합니다.

접근 권한의 실제 DB 연동

임의로 생성한 DB 이므로 실제 DB 와 연동되기 전까지는 접근이 허용된 인원에게 마스터 계정을 지급하는 방법으로만 모든 기능을 사용할 수 있습니다.

각 파라미터의 수정 시 안내 & 경고 메시지의 세분화가 필요합니다.

MFC : Microsoft Foundation Class(MFC) 라이브러리는 C++ 클래스 라이브러리로, Windows 기반의 애플리케이션을 쉽게 개발할 수 있도록 도와줍니다. 대화 상자, 버튼, 체크 박스 등의 Windows GUI 컴포넌트를 객체 지향적으로 쉽게 관리할 수 있습니다.

INI 파일 처리: INI 파일은 설정 파일 형식으로, 애플리케이션의 구성 정보를 저장하는 데 주로 사용됩니다. GetPrivateProfileString 및 WritePrivateProfileString 함수를 사용하여 INI 파일에서 데이터를 읽고 쓸 수 있습니다.

CMapStringToString: MFC의 CMapStringToString 클래스는 키-값 쌍을 저장하는 데 사용되는 컨테이너 클래스입니다. 이 클래스를 사용하여 INI 파일의 데이터를 관리하였습니다.

Dialog Based Application: 대화상자 기반 애플리케이션은 Windows 프로그램에서 주로 사용되는 사용자 인터페이스(UI) 형태입니다. 이 프로그램에서는 CDialogEx 클래스를 사용하여 대화 상자를 만들고, 그 안에 컨트롤을 배치하여 사용자와 상호작용하였습니다.

Windows API: Windows 운영 체제에서 제공하는 기본 함수 세트인 Windows API를 사용하여 어플리케이션을 구현하였습니다. 이를 통해 체크 박스의 상태를 변경하거나, INI 파일을 읽고 쓰는 등의 작업을 수행하였습니다.

C++ 프로그래밍: 이 프로그램은 C++ 언어로 작성되었습니다. 객체 지향 프로그래밍, 표준 라이브러리 사용, 메모리 관리 등의 C++ 프로그래밍의 주요 개념을 실제로 사용하였습니다.

UI 업데이트: 대화 상자나 체크박스 등의 사용자 인터페이스 요소를 동적으로 업데이트하는 방법을 배웠습니다. 이는 사용자의 액션에 따라 UI를 실시간으로 변경하는 기능을 구현할 때 필요한 기술입니다.

MFC 컨트롤들: 이 프로그램을 만들면서 여러 MFC 컨트롤들을 사용했습니다. 특히 CButton과 CListCtrl은 사용자 인터페이스를 구성하는 데 중요한 역할을 하였습니다.

이벤트 핸들링: MFC는 이벤트 기반 프로그래밍 모델을 사용하고 있습니다. 이벤트 핸들링이란 사용자의 행동, 예를 들어 버튼 클릭이나 키보드 입력 등에 반응하여 프로그램이 어떤 행동을 취하도록 하는 것을 의미합니다.

디버깅: 프로그램을 개발하는 동안 발생하는 오류를 찾고 해결하는 방법을 배웠습니다. 컴파일 오류, 런타임 오류, 로직 오류 등 다양한 유형의 오류를 해결하는 데 필요한 기술을 실제로 적용해 보았습니다.

헝가리안 표기법: 변수와 함수의 이름을 지을 때 헝가리안 표기법을 사용하였습니다. 이 표기법은 변수의 타입을 알기 쉽게 하고, 코드를 더 명확하게 만드는 데 도움이 됩니다.
기타 활동

1. T2 입력 전원 변동 시험

2. 파주 뷰티앤디지털 치과 T2 저선량 업데이트

3. 서울대학교 건강검진센터 VOC 반영 업데이트

4. SIDEX 2023 전시지원 업무

5. 팬텀 및 측정기 관리대장 업데이트
